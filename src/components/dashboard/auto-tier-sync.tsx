InVzZSBjbGllbnQiOwoKaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICJyZWFjdCI7CmltcG9ydCB7IHVzZVVzZXIgfSBmcm9tICJAY2xlcmsvbmV4dGpzIjsKaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tICJjb252ZXgvcmVhY3QiOwppbXBvcnQgeyBhcGkgfSBmcm9tICIuLi8uLi8uLi9jb252ZXgvX2dlbmVyYXRlZC9hcGkiOwoKLyoqCiAqIEF1dG9UaWVyU3luYyAtIFNpbGVudCB0aWVyIHJlY29uY2lsaWF0aW9uIGNvbXBvbmVudAogKgogKiBSdW5zIG9uY2Ugb24gZGFzaGJvYXJkIG1vdW50IHRvIGNoZWNrIGlmIENvbnZleCB0aWVyIG1hdGNoZXMgQ2xlcmsgc3RhdHVzLgogKiBJZiB1c2VyIGV4aXN0cyBpbiBDbGVyayBidXQgc2hvd3MgYXMgZnJlZV91c2VyIGluIENvbnZleCwgYXR0ZW1wdHMgc3luYy4KICoKICogSU1QT1JUQU5UOiBUaGlzIGNvbXBvbmVudCBpcyBkZXNpZ25lZCB0byB3b3JrIGFsb25nc2lkZSBVc2VyU3luYy4KICogVXNlclN5bmMgaGFuZGxlcyBpbml0aWFsIHVzZXIgY3JlYXRpb24gYW5kIGhpZ2gtY29uZmlkZW5jZSBwcmVtaXVtIGRldGVjdGlvbi4KICogQXV0b1RpZXJTeW5jIHByb3ZpZGVzIGEgc2FmZXR5IG5ldCBmb3IgY2FzZXMgd2hlcmUgd2ViaG9va3MgZmFpbCBvciBhcmUgZGVsYXllZC4KICovCmV4cG9ydCBmdW5jdGlvbiBBdXRvVGllclN5bmMoKSB7CiAgY29uc3QgeyB1c2VyLCBpcyBMb2FkZWQgfSA9IHVzZVVzZXIoKTsKICBjb25zdCB1c2VyRGF0YSA9IHVzZVF1ZXJ5KAogICAgYXBpLnVzZXJzLmdldFVzZXJCeUNsZXJrSWQsIAogICAgdXNlci8uaWQgPyB7IGNsZXJrSWQ6IHVzZXIuaWQgfSA6ICJza2lwIgogICk7CiAgY29uc3Qgc3luY0F0dGVtcHRlZCA9IHVzZVJlZig falseKTsKCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIC8vIFByZXZlbnQgbXVsdGlwbGUgc3luYyBhdHRlbXB0cwogICAgaWYgKHN5bmNBdHRlbXB0ZWQuY3VycmVudCkgcmV0dXJuOwoKICAgIC8vIE9ubHkgcnVuIGlmOgogICAgLy8gMS4gQ2xlcmsgdXNlciBpcyBsb2FkZWQgYW5kIGV4aXN0cwogICAgLy8gMi4gQ29udmV4IHVzZXIgZGF0YSBpcyBsb2FkZWQgYW5kIGV4aXN0cwogICAgLy8gMy4gQ29udmV4IHNob3dzIGZyZWVfdXNlciAocG90ZW50aWFsIHN5bmMgbmVlZGVkKQogICAgaWYgKAogICAgICBpc0xvYWRlZCAmJiAKICAgICAgdXNlci8uaWQgJiYgCiAgICAgIHVzZXJEYXRhICYmIAogICAgICB1c2VyRGF0YS50aWVyID09PSAiZnJlZV91c2VyIgogICAgKSB7CiAgICAgIHN5bmNBdHRlbXB0ZWQuY3VycmVudCA9IHRydWU7CgogICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgY29uc29sZS5sb2coJ+KAmSBBdXRvVGllclN5bmM6IENoZWNraW5nIGlmIHN5bmMgbmVlZGVkJyk7CiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3N5bmMvdGllcicsIHsgbWV0aG9kOiAnUE9TVCcgfSk7CiAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MgJiYgcmVzdWx0LnRpZXIgPT09ICdwcmVtaXVtX3VzZXInKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn6S6IEF1dG9UaWVyU3luYzogVXBncmFkZWQgdXNlciB0byBwcmVtaXVtIHRpZXInKTsKICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7IHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsgfSwgMTAwMCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZygn4pyTIEF1dG9UaWVyU3luYzogTm8gdGllciBjaGFuZ2UgbmVlZGVkJyk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdBdXRvVGllclN5bmMgZmFpbGVkIChzaWxlbnQpOicsIGVycm9yKTsKICAgICAgICB9CiAgICAgIH0sIDIwMDApOwogICAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7CiAgICB9CiAgfSwgW2lzTG9hZGVkLCB1c2VyPy5pZCwgdXNlckRhdGFdKTsKCiAgcmV0dXJuIG51bGw7Cn0K